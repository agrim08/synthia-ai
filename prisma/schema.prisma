// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [vector]
}

model user {
  id String @id @default(uuid())

  firstName String?
  lastName  String?
  imageUrl  String?

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  emailAddress String @unique

  credits Int @default(150)

  userToProjects UserToProject[]
  questionAsked  Question[]
}

model Project {
  id String @id @default(uuid())

  name      String
  githubUrl String

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  deletedAt DateTime?

  userToProjects UserToProject[]
  commit         GitCommit[]

  sourceCodeEmbeddings SourceCodeEmbeddings[]

  savedQuestions Question[]
}

model UserToProject {
  id        String @id @default(uuid())
  userId    String
  projectId String

  user    user    @relation(fields: [userId], references: [id])
  project Project @relation(fields: [projectId], references: [id])

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  @@unique([userId, projectId])
}

model GitCommit {
  id        String    @id @default(uuid())
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  commitMessage      String
  commitHash         String
  commitAuthorName   String
  commitAuthorAvatar String
  commitDate         DateTime

  // AI summary
  commitSummary String

  projectId String
  project   Project @relation(fields: [projectId], references: [id])
}

model SourceCodeEmbeddings {
  id                String                      @id @default(uuid())
  summaryEmbeddings Unsupported("vector(768)")?
  sourceCode        String
  fileName          String
  summary           String

  projectId String
  project   Project @relation(fields: [projectId], references: [id])
}

model Question {
  id        String    @id @default(uuid())
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  question String
  answer   String

  userId String
  user   user   @relation(fields: [userId], references: [id])

  projectId String
  project   Project @relation(fields: [projectId], references: [id])

  filesReferences Json?
}
